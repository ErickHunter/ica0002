---
#- name: Ansible ping module
#  ansible.builtin.ping:

- name: Update APT cache
  ansible.builtin.apt:
    cache_valid_time: 86400

#- name: Create user(s)
#  user:
#    name: "{{ item.name }}"
#  loop: "{{ users }}"

#- name: Set authorized keys
#  ansible.posix.authorized_key:
#    user: "{{ item.name }}"
#    state: present
#    key: "{{ item.key }}"
#    validate_certs: False
#  loop: "{{ users }}"



#This is for the node exporter for vm metrics, as per lab this is in the init role.
- name: Install "prometheus-node-exporter"
  apt:
    name: prometheus-node-exporter
    state: latest
    update_cache: no


- name: Set "prometheus-node-exporter" state "started" and enabled "yes"
  service:
    name: prometheus-node-exporter
    state: started
    enabled: yes

#this was part of lab7 so that you don't get issues with installing grafana.
- name: Ensure ca-certificates is installed at a specific version
  apt:
    name: ca-certificates=20230311ubuntu0.20.04.1
    state: present



#this bit is for setting up rsyslog.
- name: Install "rsyslog"
  apt:
    name: rsyslog
    state: latest
    update_cache: no

- name: Template "50-telegraf.conf" file "50-telegraf.conf.j2" to remote host "/etc/rsyslog.d/50-telegraf.conf"
  template:
    src: 50-telegraf.conf.j2
    dest: /etc/rsyslog.d/50-telegraf.conf
#    owner: OPTIONAL_UESR
#    mode: OPTIONAL
#  no_log: ONLY_FOR_THINGS_WITH_SECRETS_IN_TEMPLATE
  notify: Restart rsyslog

#make sure service is started and enabled
- name: Set "rsyslog" state "started" and enabled "yes"
  service:
    name: rsyslog
    state: started
    enabled: yes


#This stuff is for running backups
- name: Create user "backup" and generate its keys
  user:
    name: "{{ backup_user }}"
    home: /home/backup
    shell: /bin/bash
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_rsa

- name: Add known hosts at /home/backup/.ssh/known_hosts
  template:
    src: known_hosts.j2
    dest: /home/backup/.ssh/known_hosts
    mode: 0744
    owner: "{{ backup_user }}"
    #group: "{{ backup_user }}"

#This makes sure that the backup server is in known hosts.
- name: Template "known_hosts" file "known_hosts.j2" to remote host "/home/backup/.ssh/known_hosts"
  template:
    src: known_hosts.j2
    dest: /home/backup/.ssh/known_hosts
    owner: backup
    mode: 0744
#  no_log: ONLY_FOR_THINGS_WITH_SECRETS_IN_TEMPLATE
#  notify: HANDLER