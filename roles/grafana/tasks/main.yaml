---
- name: Get the grafana repo key via apt_key
  apt_key:
   url: https://packages.grafana.com/gpg.key
   state: present

- name: Install grafana repo
  apt_repository:
    repo: deb https://packages.grafana.com/oss/deb stable main
    state: present

- name: Install "grafana"
  apt:
    name: grafana
    state: latest
    update_cache: no
  
- name: Template "grafana.ini" file "grafana.ini.j2" to remote host "/etc/grafana/grafana.ini"
  template:
    src: grafana.ini.j2
    dest: /etc/grafana/grafana.ini
#    owner: OPTIONAL_UESR
#    mode: OPTIONAL
  no_log: yes #ONLY_FOR_THINGS_WITH_SECRETS_IN_TEMPLATE
  notify: Restart grafana-server

- name: Set "grafana-server" state "started" and enabled "yes"
  service:
    name: grafana-server
    state: started
    enabled: yes  


#Provisioning things.
- name: Template "datasource.yaml" file "datasource.yaml.j2" to remote host "/etc/grafana/provisioning/datasources/datasource.yaml"
  template:
    src: datasource.yaml.j2
    dest: /etc/grafana/provisioning/datasources/datasource.yaml
#    owner: OPTIONAL_UESR
#    mode: OPTIONAL
#  no_log: ONLY_FOR_THINGS_WITH_SECRETS_IN_TEMPLATE
  notify: Restart grafana-server

- name: Template "dashboard.yaml" file "dashboard.yaml.j2" to remote host "/etc/grafana/provisioning/dashboards/dashboard.yaml"
  template:
    src: dashboard.yaml.j2
    dest: /etc/grafana/provisioning/dashboards/dashboard.yaml
#    owner: OPTIONAL_UESR
#    mode: OPTIONAL
#  no_log: ONLY_FOR_THINGS_WITH_SECRETS_IN_TEMPLATE
  notify: Restart grafana-server

- name: Make "DIRECTORY" at "/var/lib/grafana/dashboards" 
  file:
    path: /var/lib/grafana/dashboards
    state: directory

- name: Copy file "main.json" to remote host "/var/lib/grafana/dashboards/main.json"
  copy:
    src: main.json
    dest: /var/lib/grafana/dashboards/main.json
  notify: Restart grafana-server

#need to precreate user form GH credentails somehow.